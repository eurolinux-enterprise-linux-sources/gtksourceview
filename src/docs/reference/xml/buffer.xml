<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" 
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<refentry id="GtkSourceBuffer">
<refmeta>
<refentrytitle role="top_of_page">GtkSourceBuffer</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>GTKSOURCEVIEW Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GtkSourceBuffer</refname>
<refpurpose>Text buffer object for <link linkend="GtkSourceView"><type>GtkSourceView</type></link></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>

#include &lt;gtksourceview/gtksourcebuffer.h&gt;


                    <link linkend="GtkSourceBuffer-struct">GtkSourceBuffer</link>;
<link linkend="GtkSourceBuffer">GtkSourceBuffer</link>*    <link linkend="gtk-source-buffer-new">gtk_source_buffer_new</link>               (<link linkend="GtkSourceTagTable">GtkSourceTagTable</link> *table);
<link linkend="GtkSourceBuffer">GtkSourceBuffer</link>*    <link linkend="gtk-source-buffer-new-with-language">gtk_source_buffer_new_with_language</link> (<link linkend="GtkSourceLanguage">GtkSourceLanguage</link> *language);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-source-buffer-get-check-brackets">gtk_source_buffer_get_check_brackets</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-set-check-brackets">gtk_source_buffer_set_check_brackets</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gboolean">gboolean</link> check_brackets);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-set-bracket-match-style">gtk_source_buffer_set_bracket_match_style</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *source_buffer,
                                                         const <link linkend="GtkSourceTagStyle">GtkSourceTagStyle</link> *style);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-source-buffer-get-highlight">gtk_source_buffer_get_highlight</link>     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-set-highlight">gtk_source_buffer_set_highlight</link>     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gboolean">gboolean</link> highlight);
<link linkend="gint">gint</link>                <link linkend="gtk-source-buffer-get-max-undo-levels">gtk_source_buffer_get_max_undo_levels</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-set-max-undo-levels">gtk_source_buffer_set_max_undo_levels</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gint">gint</link> max_undo_levels);
<link linkend="GtkSourceLanguage">GtkSourceLanguage</link>*  <link linkend="gtk-source-buffer-get-language">gtk_source_buffer_get_language</link>      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-set-language">gtk_source_buffer_set_language</link>      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkSourceLanguage">GtkSourceLanguage</link> *language);
<link linkend="gunichar">gunichar</link>            <link linkend="gtk-source-buffer-get-escape-char">gtk_source_buffer_get_escape_char</link>   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-set-escape-char">gtk_source_buffer_set_escape_char</link>   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gunichar">gunichar</link> escape_char);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-source-buffer-can-undo">gtk_source_buffer_can_undo</link>          (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="gboolean">gboolean</link>            <link linkend="gtk-source-buffer-can-redo">gtk_source_buffer_can_redo</link>          (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-undo">gtk_source_buffer_undo</link>              (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-redo">gtk_source_buffer_redo</link>              (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-begin-not-undoable-action">gtk_source_buffer_begin_not_undoable_action</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-end-not-undoable-action">gtk_source_buffer_end_not_undoable_action</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="GtkSourceMarker">GtkSourceMarker</link>*    <link linkend="gtk-source-buffer-create-marker">gtk_source_buffer_create_marker</link>     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *type,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *where);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-move-marker">gtk_source_buffer_move_marker</link>       (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkSourceMarker">GtkSourceMarker</link> *marker,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *where);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-delete-marker">gtk_source_buffer_delete_marker</link>     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkSourceMarker">GtkSourceMarker</link> *marker);
<link linkend="GtkSourceMarker">GtkSourceMarker</link>*    <link linkend="gtk-source-buffer-get-marker">gtk_source_buffer_get_marker</link>        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         const <link linkend="gchar">gchar</link> *name);
<link linkend="GSList">GSList</link>*             <link linkend="gtk-source-buffer-get-markers-in-region">gtk_source_buffer_get_markers_in_region</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *begin,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *end);
<link linkend="GtkSourceMarker">GtkSourceMarker</link>*    <link linkend="gtk-source-buffer-get-first-marker">gtk_source_buffer_get_first_marker</link>  (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="GtkSourceMarker">GtkSourceMarker</link>*    <link linkend="gtk-source-buffer-get-last-marker">gtk_source_buffer_get_last_marker</link>   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);
<link linkend="void">void</link>                <link linkend="gtk-source-buffer-get-iter-at-marker">gtk_source_buffer_get_iter_at_marker</link>
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkTextIter">GtkTextIter</link> *iter,
                                                         <link linkend="GtkSourceMarker">GtkSourceMarker</link> *marker);
<link linkend="GtkSourceMarker">GtkSourceMarker</link>*    <link linkend="gtk-source-buffer-get-next-marker">gtk_source_buffer_get_next_marker</link>   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkTextIter">GtkTextIter</link> *iter);
<link linkend="GtkSourceMarker">GtkSourceMarker</link>*    <link linkend="gtk-source-buffer-get-prev-marker">gtk_source_buffer_get_prev_marker</link>   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkTextIter">GtkTextIter</link> *iter);

</synopsis>
</refsynopsisdiv>

<refsect1 role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkTextBuffer">GtkTextBuffer</link>
         +----GtkSourceBuffer
</synopsis>

</refsect1>





<refsect1 role="properties">
<title role="properties.title">Properties</title>
<synopsis>

  &quot;<link linkend="GtkSourceBuffer--check-brackets">check-brackets</link>&quot;           <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GtkSourceBuffer--escape-char">escape-char</link>&quot;              <link linkend="guint">guint</link>                 : Read / Write
  &quot;<link linkend="GtkSourceBuffer--highlight">highlight</link>&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write
  &quot;<link linkend="GtkSourceBuffer--language">language</link>&quot;                 <link linkend="GtkSourceLanguage">GtkSourceLanguage</link>     : Read / Write
  &quot;<link linkend="GtkSourceBuffer--max-undo-levels">max-undo-levels</link>&quot;          <link linkend="gint">gint</link>                  : Read / Write
</synopsis>
</refsect1>

<refsect1 role="signal_proto">
<title role="signal_proto.title">Signals</title>
<synopsis>

  &quot;<link linkend="GtkSourceBuffer-can-redo">can-redo</link>&quot;                                       : Run Last
  &quot;<link linkend="GtkSourceBuffer-can-undo">can-undo</link>&quot;                                       : Run Last
  &quot;<link linkend="GtkSourceBuffer-highlight-updated">highlight-updated</link>&quot;                              : Run Last
  &quot;<link linkend="GtkSourceBuffer-marker-updated">marker-updated</link>&quot;                                 : Run Last
</synopsis>
</refsect1>


<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
The <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link> object is the model for <link linkend="GtkSourceView"><type>GtkSourceView</type></link> widgets.
It extends the <link linkend="GtkTextBuffer"><type>GtkTextBuffer</type></link> object by adding features necessary to
display and edit source code: syntax highlighting, bracket matching
and markers.  It also implements support for undo/redo operations.
</para>

<para>
To create a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link> use <link linkend="gtk-source-buffer-new"><function>gtk_source_buffer_new()</function></link> or
<link linkend="gtk-source-buffer-new-with-language"><function>gtk_source_buffer_new_with_language()</function></link>.  The second form is just a
convenience function which allows you to initially set a
<link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link>.
</para>

<para>
By default highlighting is enabled, but you can disable it with
<link linkend="gtk-source-buffer-set-highlight"><function>gtk_source_buffer_set_highlight()</function></link>.  This can be useful if you're not
using <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link> objects to set the highlighting patterns, and
instead you're manually adding <link linkend="GtkSourceTag"><type>GtkSourceTag</type></link> objects to the buffer's
tag table.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="GtkSourceBuffer-struct" role="struct"/>GtkSourceBuffer</title>
<indexterm><primary>GtkSourceBuffer</primary></indexterm><programlisting>typedef struct _GtkSourceBuffer GtkSourceBuffer;</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-new" role="function"/>gtk_source_buffer_new ()</title>
<indexterm><primary>gtk_source_buffer_new</primary></indexterm><programlisting><link linkend="GtkSourceBuffer">GtkSourceBuffer</link>*    gtk_source_buffer_new               (<link linkend="GtkSourceTagTable">GtkSourceTagTable</link> *table);</programlisting>
<para>
Creates a new source buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>table</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceTagTable"><type>GtkSourceTagTable</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> to create a new one.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new source buffer.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-new-with-language" role="function"/>gtk_source_buffer_new_with_language ()</title>
<indexterm><primary>gtk_source_buffer_new_with_language</primary></indexterm><programlisting><link linkend="GtkSourceBuffer">GtkSourceBuffer</link>*    gtk_source_buffer_new_with_language (<link linkend="GtkSourceLanguage">GtkSourceLanguage</link> *language);</programlisting>
<para>
Creates a new source buffer using the highlighting patterns in
<parameter>language</parameter>.  This is equivalent to creating a new source buffer with
the default tag table and then calling
<link linkend="gtk-source-buffer-set-language"><function>gtk_source_buffer_set_language()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>language</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new source buffer which will highlight text
according to <parameter>language</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-check-brackets" role="function"/>gtk_source_buffer_get_check_brackets ()</title>
<indexterm><primary>gtk_source_buffer_get_check_brackets</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_source_buffer_get_check_brackets
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines whether bracket match highlighting is activated for the
source buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if the source buffer will highlight matching
brackets.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-set-check-brackets" role="function"/>gtk_source_buffer_set_check_brackets ()</title>
<indexterm><primary>gtk_source_buffer_set_check_brackets</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_set_check_brackets
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gboolean">gboolean</link> check_brackets);</programlisting>
<para>
Controls the bracket match highlighting function in the buffer.  If
activated, when you position your cursor over a bracket character
(a parenthesis, a square bracket, etc.) the matching opening or
closing bracket character will be highlighted.  You can specify the
style with the <link linkend="gtk-source-buffer-set-bracket-match-style"><function>gtk_source_buffer_set_bracket_match_style()</function></link>
function.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>check_brackets</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if you want matching brackets highlighted.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-set-bracket-match-style" role="function"/>gtk_source_buffer_set_bracket_match_style ()</title>
<indexterm><primary>gtk_source_buffer_set_bracket_match_style</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_set_bracket_match_style
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *source_buffer,
                                                         const <link linkend="GtkSourceTagStyle">GtkSourceTagStyle</link> *style);</programlisting>
<para>
Sets the style used for highlighting matching brackets.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>source_buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>style</parameter>&nbsp;:</term>
<listitem><simpara> the <link linkend="GtkSourceTagStyle"><type>GtkSourceTagStyle</type></link> specifying colors and text
attributes.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-highlight" role="function"/>gtk_source_buffer_get_highlight ()</title>
<indexterm><primary>gtk_source_buffer_get_highlight</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_source_buffer_get_highlight     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines whether text highlighting is activated in the source
buffer.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if highlighting is enabled.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-set-highlight" role="function"/>gtk_source_buffer_set_highlight ()</title>
<indexterm><primary>gtk_source_buffer_set_highlight</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_set_highlight     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gboolean">gboolean</link> highlight);</programlisting>
<para>
Controls whether text is highlighted in the buffer.  If <parameter>highlight</parameter>
is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, the text will be highlighted according to the patterns
installed in the buffer (either set with
<link linkend="gtk-source-buffer-set-language"><function>gtk_source_buffer_set_language()</function></link> or by adding individual
<link linkend="GtkSourceTag"><type>GtkSourceTag</type></link> tags to the buffer's tag table).  Otherwise, any
current highlighted text will be restored to the default buffer
style.
</para>
<para>
Tags not of <link linkend="GtkSourceTag"><type>GtkSourceTag</type></link> type will not be removed by this option,
and normal <link linkend="GtkTextTag"><type>GtkTextTag</type></link> priority settings apply when highlighting is
enabled.
</para>
<para>
If not using a <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link> for setting the highlighting
patterns in the buffer, it is recommended for performance reasons
that you add all the <link linkend="GtkSourceTag"><type>GtkSourceTag</type></link> tags with highlighting disabled
and enable it when finished.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>highlight</parameter>&nbsp;:</term>
<listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if you want to activate highlighting.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-max-undo-levels" role="function"/>gtk_source_buffer_get_max_undo_levels ()</title>
<indexterm><primary>gtk_source_buffer_get_max_undo_levels</primary></indexterm><programlisting><link linkend="gint">gint</link>                gtk_source_buffer_get_max_undo_levels
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines the number of undo levels the buffer will track for
buffer edits.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the maximum number of possible undo levels.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-set-max-undo-levels" role="function"/>gtk_source_buffer_set_max_undo_levels ()</title>
<indexterm><primary>gtk_source_buffer_set_max_undo_levels</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_set_max_undo_levels
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gint">gint</link> max_undo_levels);</programlisting>
<para>
Sets the number of undo levels for user actions the buffer will
track.  If the number of user actions exceeds the limit set by this
function, older actions will be discarded.
</para>
<para>
A new action is started whenever the function
<link linkend="gtk-text-buffer-begin-user-action"><function>gtk_text_buffer_begin_user_action()</function></link> is called.  In general, this
happens whenever the user presses any key which modifies the
buffer, but the undo manager will try to merge similar consecutive
actions, such as multiple character insertions into one action.
But, inserting a newline does start a new action.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>max_undo_levels</parameter>&nbsp;:</term>
<listitem><simpara> the desired maximum number of undo levels.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-language" role="function"/>gtk_source_buffer_get_language ()</title>
<indexterm><primary>gtk_source_buffer_get_language</primary></indexterm><programlisting><link linkend="GtkSourceLanguage">GtkSourceLanguage</link>*  gtk_source_buffer_get_language      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines the <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link> used by the buffer.  The returned
object should not be unreferenced by the user.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link> set by
<link linkend="gtk-source-buffer-set-language"><function>gtk_source_buffer_set_language()</function></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-set-language" role="function"/>gtk_source_buffer_set_language ()</title>
<indexterm><primary>gtk_source_buffer_set_language</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_set_language      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkSourceLanguage">GtkSourceLanguage</link> *language);</programlisting>
<para>
Sets the <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link> the source buffer will use, adding
<link linkend="GtkSourceTag"><type>GtkSourceTag</type></link> tags with the language's patterns and setting the
escape character with <link linkend="gtk-source-buffer-set-escape-char"><function>gtk_source_buffer_set_escape_char()</function></link>.  Note
that this will remove any <link linkend="GtkSourceTag"><type>GtkSourceTag</type></link> tags currently in the
buffer's tag table.  The buffer holds a reference to the <parameter>language</parameter>
set.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>language</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceLanguage"><type>GtkSourceLanguage</type></link> to set, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-escape-char" role="function"/>gtk_source_buffer_get_escape_char ()</title>
<indexterm><primary>gtk_source_buffer_get_escape_char</primary></indexterm><programlisting><link linkend="gunichar">gunichar</link>            gtk_source_buffer_get_escape_char   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines the escaping character used by the source buffer
highlighting engine.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the UTF-8 character for the escape character the
buffer is using.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-set-escape-char" role="function"/>gtk_source_buffer_set_escape_char ()</title>
<indexterm><primary>gtk_source_buffer_set_escape_char</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_set_escape_char   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="gunichar">gunichar</link> escape_char);</programlisting>
<para>
Sets the escape character to be used by the highlighting engine.
</para>
<para>
When performing the initial analysis, the engine will discard a
matching syntax pattern if it's prefixed with an odd number of
escape characters.  This allows for example to correctly highlight
strings with escaped quotes embedded.
</para>
<para>
This setting affects only syntax patterns (i.e. those defined in
<link linkend="GtkSyntaxTag"><type>GtkSyntaxTag</type></link> tags).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>escape_char</parameter>&nbsp;:</term>
<listitem><simpara> the escape character the buffer should use.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-can-undo" role="function"/>gtk_source_buffer_can_undo ()</title>
<indexterm><primary>gtk_source_buffer_can_undo</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_source_buffer_can_undo          (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines whether a source buffer can undo the last action.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if it's possible to undo the last action.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-can-redo" role="function"/>gtk_source_buffer_can_redo ()</title>
<indexterm><primary>gtk_source_buffer_can_redo</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            gtk_source_buffer_can_redo          (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Determines whether a source buffer can redo the last action
(i.e. if the last operation was an undo).</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if a redo is possible.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-undo" role="function"/>gtk_source_buffer_undo ()</title>
<indexterm><primary>gtk_source_buffer_undo</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_undo              (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Undoes the last user action which modified the buffer.  Use
<link linkend="gtk-source-buffer-can-undo"><function>gtk_source_buffer_can_undo()</function></link> to check whether a call to this
function will have any effect.
</para>
<para>
Actions are defined as groups of operations between a call to
<link linkend="gtk-text-buffer-begin-user-action"><function>gtk_text_buffer_begin_user_action()</function></link> and
<link linkend="gtk-text-buffer-end-user-action"><function>gtk_text_buffer_end_user_action()</function></link>, or sequences of similar edits
(inserts or deletes) on the same line.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-redo" role="function"/>gtk_source_buffer_redo ()</title>
<indexterm><primary>gtk_source_buffer_redo</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_redo              (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Redoes the last undo operation.  Use <link linkend="gtk-source-buffer-can-redo"><function>gtk_source_buffer_can_redo()</function></link>
to check whether a call to this function will have any effect.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-begin-not-undoable-action" role="function"/>gtk_source_buffer_begin_not_undoable_action ()</title>
<indexterm><primary>gtk_source_buffer_begin_not_undoable_action</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_begin_not_undoable_action
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Marks the beginning of a not undoable action on the buffer,
disabling the undo manager.  Typically you would call this function
before initially setting the contents of the buffer (e.g. when
loading a file in a text editor).
</para>
<para>
You may nest <link linkend="gtk-source-buffer-begin-not-undoable-action"><function>gtk_source_buffer_begin_not_undoable_action()</function></link> /
<link linkend="gtk-source-buffer-end-not-undoable-action"><function>gtk_source_buffer_end_not_undoable_action()</function></link> blocks.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-end-not-undoable-action" role="function"/>gtk_source_buffer_end_not_undoable_action ()</title>
<indexterm><primary>gtk_source_buffer_end_not_undoable_action</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_end_not_undoable_action
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Marks the end of a not undoable action on the buffer.  When the
last not undoable block is closed through the call to this
function, the list of undo actions is cleared and the undo manager
is re-enabled.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-create-marker" role="function"/>gtk_source_buffer_create_marker ()</title>
<indexterm><primary>gtk_source_buffer_create_marker</primary></indexterm><programlisting><link linkend="GtkSourceMarker">GtkSourceMarker</link>*    gtk_source_buffer_create_marker     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         const <link linkend="gchar">gchar</link> *name,
                                                         const <link linkend="gchar">gchar</link> *type,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *where);</programlisting>
<para>
Creates a marker in the <parameter>buffer</parameter> of type <parameter>type</parameter>.  A marker is
semantically very similar to a <link linkend="GtkTextMark"><type>GtkTextMark</type></link>, except it has a type
which is used by the <link linkend="GtkSourceView"><type>GtkSourceView</type></link> displaying the buffer to show a
pixmap on the left margin, at the line the marker is in.  Because
of this, a marker is generally associated to a line and not a
character position.  Markers are also accessible through a position
or range in the buffer.
</para>
<para>
Markers are implemented using <link linkend="GtkTextMark"><type>GtkTextMark</type></link>, so all characteristics
and restrictions to marks apply to markers too.  These includes
life cycle issues and "mark-set" and "mark-deleted" signal
emissions.
</para>
<para>
Like a <link linkend="GtkTextMark"><type>GtkTextMark</type></link>, a <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> can be anonymous if the
passed <parameter>name</parameter> is <link linkend="NULL:CAPS"><literal>NULL</literal></link>.  Also, the buffer owns the markers so you
shouldn't unreference it.
</para>
<para>
Markers always have left gravity and are moved to the beginning of
the line when the user deletes the line they were in.  Also, if the
user deletes a region of text which contained lines with markers,
those are deleted.
</para>
<para>
Typical uses for a marker are bookmarks, breakpoints, current
executing instruction indication in a source file, etc..</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> the name of the marker, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>type</parameter>&nbsp;:</term>
<listitem><simpara> a string defining the marker type, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>where</parameter>&nbsp;:</term>
<listitem><simpara> location to place the marker.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a new <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link>, owned by the buffer.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-move-marker" role="function"/>gtk_source_buffer_move_marker ()</title>
<indexterm><primary>gtk_source_buffer_move_marker</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_move_marker       (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkSourceMarker">GtkSourceMarker</link> *marker,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *where);</programlisting>
<para>
Moves <parameter>marker</parameter> to the new location <parameter>where</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>marker</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> in <parameter>buffer</parameter>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>where</parameter>&nbsp;:</term>
<listitem><simpara> the new location for the marker.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-delete-marker" role="function"/>gtk_source_buffer_delete_marker ()</title>
<indexterm><primary>gtk_source_buffer_delete_marker</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_delete_marker     (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkSourceMarker">GtkSourceMarker</link> *marker);</programlisting>
<para>
Deletes <parameter>marker</parameter> from the source buffer.  The same conditions as for
<link linkend="GtkTextMark"><type>GtkTextMark</type></link> apply here.  The marker is no longer accessible from
the buffer, but if you held a reference to it, it will not be
destroyed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>marker</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> in the <parameter>buffer</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-marker" role="function"/>gtk_source_buffer_get_marker ()</title>
<indexterm><primary>gtk_source_buffer_get_marker</primary></indexterm><programlisting><link linkend="GtkSourceMarker">GtkSourceMarker</link>*    gtk_source_buffer_get_marker        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         const <link linkend="gchar">gchar</link> *name);</programlisting>
<para>
Looks up the <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> named <parameter>name</parameter> in <parameter>buffer</parameter>, returning
<link linkend="NULL:CAPS"><literal>NULL</literal></link> if it doesn't exists.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>name</parameter>&nbsp;:</term>
<listitem><simpara> name of the marker to retrieve.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> whose name is <parameter>name</parameter>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-markers-in-region" role="function"/>gtk_source_buffer_get_markers_in_region ()</title>
<indexterm><primary>gtk_source_buffer_get_markers_in_region</primary></indexterm><programlisting><link linkend="GSList">GSList</link>*             gtk_source_buffer_get_markers_in_region
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *begin,
                                                         const <link linkend="GtkTextIter">GtkTextIter</link> *end);</programlisting>
<para>
Returns an <emphasis>ordered</emphasis> (by position) <link linkend="GSList"><type>GSList</type></link> of
<link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> objects inside the region delimited by the
<link linkend="GtkTextIter"><type>GtkTextIter</type></link> <parameter>begin</parameter> and <parameter>end</parameter>.  The iters may be in any order.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>begin</parameter>&nbsp;:</term>
<listitem><simpara> beginning of the range.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>end</parameter>&nbsp;:</term>
<listitem><simpara> end of the range.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a <link linkend="GSList"><type>GSList</type></link> of the <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> inside the range.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-first-marker" role="function"/>gtk_source_buffer_get_first_marker ()</title>
<indexterm><primary>gtk_source_buffer_get_first_marker</primary></indexterm><programlisting><link linkend="GtkSourceMarker">GtkSourceMarker</link>*    gtk_source_buffer_get_first_marker  (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Returns the first (nearest to the top of the buffer) marker in
<parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a reference to the first <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
there are no markers in the buffer.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-last-marker" role="function"/>gtk_source_buffer_get_last_marker ()</title>
<indexterm><primary>gtk_source_buffer_get_last_marker</primary></indexterm><programlisting><link linkend="GtkSourceMarker">GtkSourceMarker</link>*    gtk_source_buffer_get_last_marker   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer);</programlisting>
<para>
Returns the last (nearest to the bottom of the buffer) marker in
<parameter>buffer</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> a reference to the last <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if
there are no markers in the buffer.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-iter-at-marker" role="function"/>gtk_source_buffer_get_iter_at_marker ()</title>
<indexterm><primary>gtk_source_buffer_get_iter_at_marker</primary></indexterm><programlisting><link linkend="void">void</link>                gtk_source_buffer_get_iter_at_marker
                                                        (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkTextIter">GtkTextIter</link> *iter,
                                                         <link linkend="GtkSourceMarker">GtkSourceMarker</link> *marker);</programlisting>
<para>
Initializes <parameter>iter</parameter> at the location of <parameter>marker</parameter>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iter</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkTextIter"><type>GtkTextIter</type></link> to initialize.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>marker</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> of <parameter>buffer</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-next-marker" role="function"/>gtk_source_buffer_get_next_marker ()</title>
<indexterm><primary>gtk_source_buffer_get_next_marker</primary></indexterm><programlisting><link linkend="GtkSourceMarker">GtkSourceMarker</link>*    gtk_source_buffer_get_next_marker   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkTextIter">GtkTextIter</link> *iter);</programlisting>
<para>
Returns the nearest marker to the right of <parameter>iter</parameter>.  If there are
multiple markers at the same position, this function will always
return the first one (from the internal linked list), even if
starting the search exactly at its location.  You can get the
others using <link linkend="gtk-source-marker-next"><function>gtk_source_marker_next()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iter</parameter>&nbsp;:</term>
<listitem><simpara> the location to start searching from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> nearest to the right of <parameter>iter</parameter>,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if there are no more markers after <parameter>iter</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="gtk-source-buffer-get-prev-marker" role="function"/>gtk_source_buffer_get_prev_marker ()</title>
<indexterm><primary>gtk_source_buffer_get_prev_marker</primary></indexterm><programlisting><link linkend="GtkSourceMarker">GtkSourceMarker</link>*    gtk_source_buffer_get_prev_marker   (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *buffer,
                                                         <link linkend="GtkTextIter">GtkTextIter</link> *iter);</programlisting>
<para>
Returns the nearest marker to the left of <parameter>iter</parameter>.  If there are
multiple markers at the same position, this function will always
return the last one (from the internal linked list), even if
starting the search exactly at its location.  You can get the
others using <link linkend="gtk-source-marker-prev"><function>gtk_source_marker_prev()</function></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>buffer</parameter>&nbsp;:</term>
<listitem><simpara> a <link linkend="GtkSourceBuffer"><type>GtkSourceBuffer</type></link>.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>iter</parameter>&nbsp;:</term>
<listitem><simpara> the location to start searching from.
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the <link linkend="GtkSourceMarker"><type>GtkSourceMarker</type></link> nearest to the left of <parameter>iter</parameter>,
or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if there are no more markers before <parameter>iter</parameter>.
</simpara></listitem></varlistentry>
</variablelist></refsect2>

</refsect1>
<refsect1 role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2><title><anchor id="GtkSourceBuffer--check-brackets"/>The &quot;<literal>check-brackets</literal>&quot; property</title>
<indexterm><primary>GtkSourceBuffer:check-brackets</primary></indexterm><programlisting>  &quot;check-brackets&quot;           <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether to check and highlight matching brackets.</para><para>Default value: TRUE</para>
</refsect2>
<refsect2><title><anchor id="GtkSourceBuffer--escape-char"/>The &quot;<literal>escape-char</literal>&quot; property</title>
<indexterm><primary>GtkSourceBuffer:escape-char</primary></indexterm><programlisting>  &quot;escape-char&quot;              <link linkend="guint">guint</link>                 : Read / Write</programlisting>
<para>Escaping character for syntax patterns.</para><para>Default value: 0</para>
</refsect2>
<refsect2><title><anchor id="GtkSourceBuffer--highlight"/>The &quot;<literal>highlight</literal>&quot; property</title>
<indexterm><primary>GtkSourceBuffer:highlight</primary></indexterm><programlisting>  &quot;highlight&quot;                <link linkend="gboolean">gboolean</link>              : Read / Write</programlisting>
<para>Whether to highlight syntax in the buffer.</para><para>Default value: FALSE</para>
</refsect2>
<refsect2><title><anchor id="GtkSourceBuffer--language"/>The &quot;<literal>language</literal>&quot; property</title>
<indexterm><primary>GtkSourceBuffer:language</primary></indexterm><programlisting>  &quot;language&quot;                 <link linkend="GtkSourceLanguage">GtkSourceLanguage</link>     : Read / Write</programlisting>
<para>Language object to get highlighting patterns from.</para></refsect2>
<refsect2><title><anchor id="GtkSourceBuffer--max-undo-levels"/>The &quot;<literal>max-undo-levels</literal>&quot; property</title>
<indexterm><primary>GtkSourceBuffer:max-undo-levels</primary></indexterm><programlisting>  &quot;max-undo-levels&quot;          <link linkend="gint">gint</link>                  : Read / Write</programlisting>
<para>Number of undo levels for the buffer.</para><para>Allowed values: [0,200]</para>
<para>Default value: 25</para>
</refsect2>

</refsect1>

<refsect1 role="signals">
<title role="signals.title">Signal Details</title>
<refsect2><title><anchor id="GtkSourceBuffer-can-redo"/>The &quot;can-redo&quot; signal</title>
<indexterm><primary>GtkSourceBuffer::can-redo</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *sourcebuffer,
                                                        <link linkend="gboolean">gboolean</link>         arg1,
                                                        <link linkend="gpointer">gpointer</link>         user_data)         : Run Last</programlisting>
<para>
Emitted whenever there is a change in the buffer's ability to redo an
operation.
</para><variablelist role="params">
<varlistentry><term><parameter>sourcebuffer</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>TRUE if the buffer can now perform an redo.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkSourceBuffer-can-undo"/>The &quot;can-undo&quot; signal</title>
<indexterm><primary>GtkSourceBuffer::can-undo</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *sourcebuffer,
                                                        <link linkend="gboolean">gboolean</link>         arg1,
                                                        <link linkend="gpointer">gpointer</link>         user_data)         : Run Last</programlisting>
<para>
Emitted whenever there is a change in the buffer's ability to undo an
operation.
</para><variablelist role="params">
<varlistentry><term><parameter>sourcebuffer</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara>TRUE if the buffer can now perform an undo.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkSourceBuffer-highlight-updated"/>The &quot;highlight-updated&quot; signal</title>
<indexterm><primary>GtkSourceBuffer::highlight-updated</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *sourcebuffer,
                                                        <link linkend="GtkTextIter">GtkTextIter</link>     *arg1,
                                                        <link linkend="GtkTextIter">GtkTextIter</link>     *arg2,
                                                        <link linkend="gpointer">gpointer</link>         user_data)         : Run Last</programlisting>
<para>
Emitted whenever the syntax highlighting information has been updated,
so that views can request a redraw if the region changed is visible.
Usually only view widgets displaying this buffer will be interested in
this signal.
</para><variablelist role="params">
<varlistentry><term><parameter>sourcebuffer</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara><link linkend="GtkTextIter"><type>GtkTextIter</type></link> at the start of the updated region.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg2</parameter>&nbsp;:</term>
<listitem><simpara><link linkend="GtkTextIter"><type>GtkTextIter</type></link> at the end of the updated region.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2><refsect2><title><anchor id="GtkSourceBuffer-marker-updated"/>The &quot;marker-updated&quot; signal</title>
<indexterm><primary>GtkSourceBuffer::marker-updated</primary></indexterm><programlisting><link linkend="void">void</link>                user_function                      (<link linkend="GtkSourceBuffer">GtkSourceBuffer</link> *sourcebuffer,
                                                        <link linkend="GtkTextIter">GtkTextIter</link>     *arg1,
                                                        <link linkend="gpointer">gpointer</link>         user_data)         : Run Last</programlisting>
<para>
Emitted whenever a marker of <parameter>sourcebuffer</parameter> has changed and needs to be
redisplayed by the view.  A change in a marker's type or location can
trigger this signal.
</para>

<para>
Note that moving a marker causes the emission of this signal twice:
one for the old location and one for the new.
</para><variablelist role="params">
<varlistentry><term><parameter>sourcebuffer</parameter>&nbsp;:</term>
<listitem><simpara>the object which received the signal.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>arg1</parameter>&nbsp;:</term>
<listitem><simpara><link linkend="GtkTextIter"><type>GtkTextIter</type></link> at the location where the change occurred.

</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara>user data set when the signal handler was connected.</simpara></listitem></varlistentry>
</variablelist></refsect2>
</refsect1>


<refsect1>
<title>See Also</title>
<para>
There is an <link linkend="TextWidget">introduction</link> document
describing the basic concepts of the buffer/view interactions.
</para>

<para>
Check <link linkend="GtkTextBuffer"><type>GtkTextBuffer</type></link> for information about the base buffer; and
<link linkend="GtkSourceView"><type>GtkSourceView</type></link> for examples on setting up the buffer to be displayed
in a view widget.
</para>
</refsect1>

</refentry>
